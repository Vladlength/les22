from aiogram.utils import executor
import asyncio
from aiogram.dispatcher import Dispatcher
from aiogram.types import ReplyKeyboardRemove, ReplyKeyboardMarkup, InlineKeyboardButton

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher.filters.state import StatesGroup, State

from aiogram import Bot, types

import config
import keyboard
import logging

storage = MemoryStorage()
bot = Bot(token=config.botkey, parse_mode=types.ParseMode.HTML)  # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
dp = Dispatcher(bot, storage=storage)  # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∏—Å–ø–∞—Ç—á–µ—Ä –∫ –Ω–∞—â–µ–º—É –±–æ—Ç—É

logging.basicConfig(filename='log.txt',
                    format=u'%(filename)s [LINE:%(lineno)d] #%(levelname)-8s [%(asctime)s] %(message)s',
                    level=logging.INFO
                    )  # –≤–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ


async def on_startup_(_):
    print(('–±–æ—Ç –∑–∞–ø—É—â–µ–Ω'))


# handler –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–∞–∫–∏–µ-–ª–∏–±–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
@dp.message_handler(Command('start'), state=None)  # —É–∫–∞–∑—ã–≤–∞–µ–º –±–æ—Ç—É –Ω–∞ –∫–∞–∫—É—é –∫–æ–º–∞–Ω–¥—É –Ω–∞–¥–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å
async def welcome(message):
    with open("user.txt", "r") as JoinedFile:
        # —Å–æ–∑–¥–∞–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∏–∑ –∏–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        JoinedUsers = set()
        for line in JoinedFile:
            JoinedUsers.add(line.strip())

    if not str(message.chat.id) in JoinedUsers:  # –µ—Å–ª–∏ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ –Ω–µ—Ç –∏–¥ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        # –¥–æ–ø–∏—Å—ã–≤–∞–µ–º –µ–≥–æ –≤ —Ñ–∞–π–ª –∏ –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–æ
        with open("user.txt", "a") as JoinedFile:
            JoinedFile.write(str(message.chat.id) + '\n')
            JoinedUsers.add(message.chat.id)

    await bot.send_message(message.chat.id, f"–ü–†–ò–í–ï–¢, *{message.from_user.first_name}, *–ë–û–¢ –†–ê–ë–û–¢–ê–ï–¢",
                           reply_markup=keyboard.start, parse_mode="Markdown")
    # –±–æ—Ç –æ—Ç—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –≤—ã–≤–æ–¥–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É start
    await bot.send_sticker(message.chat.id,
                           sticker='CAACAgIAAxkBAAEI75pkW9RZTlpLamK2Ul6z-9-J3kqwvAACRwEAAntOKhAtvk07cY4gsC8E')
    # –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Ç–∏–∫–µ—Ä (—Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID) –≤ —á–∞—Ç message.chat.id. ID —Å—Ç–∏–∫–µ—Ä–∞ - Get Sticker ID


@dp.message_handler(content_types=['text'])  # content_types = ['sticker'] –µ—Å–ª–∏ –ø—Ä–∏—Å—ã–ª–∞—é—Ç —Å—Ç–∏–∫–µ—Ä
async def get_message(message: types.Message):
    if message.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        await bot.send_message(message.chat.id, text='üßê' + '*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*\n–ë–æ—Ç —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è',
                               parse_mode='Markdown', reply_markup=ReplyKeyboardRemove())  # —ç–º–æ–¥–∑–∏ –º–æ–∂–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ —Ç–≥ –∏ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç–æ–º –≤—Å—Ç–∞–≤–∏—Ç—å
        # reply_markup = ReplyKeyboardRemove() —É–±–µ—Ä–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
# await message.delete()
# await message.reply(text='*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*\n–ë–æ—Ç —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è',
#                        parse_mode='Markdown')
# await message.answer(text='*–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è*\n–ë–æ—Ç —Å–æ–∑–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è',
#                        parse_mode='Markdown')

# bot.send_message –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
# message.answer –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
# message.reply –±–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
# message.delete() —É–¥–∞–ª–∏—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ


# –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ—Ç–æ–¥–æ–≤ message –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å types.Message

@dp.message_handler(content_types=['sticker'])
async def get_message_id(message: types.Message):
    await message.reply(message.sticker.file_id)
    # –µ—Å–ª–∏ –ø—Ä–∏—à–µ–ª —Å—Ç–∏–∫–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–º —Å –∏–¥ —ç—Ç–æ–≥–æ —Å—Ç–∏–∫–µ—Ä–∞


@dp.message_handler(content_types=['text'])
async def echo(message: types.Message):
    await message.answer(message.text)  # —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã
    await bot.send_message(chat_id=message.from_user.id,
                           text='HY')  # —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã. –ë—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞–ø–∏—Å–∞–≤—à–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.send_message(chat_id=message.chat.id,
                           text='HY')  # –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ—Ç —á–∞—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞–ø–∏—Å–∞–Ω–æ —Å–æ–æ–æ—â–µ–Ω–∏–µ
    await bot.send_photo(chat_id=message.from_user.id,
                         photo="https://static-cse.canva.com/blob/847132/paulskorupskas7KLaxLbSXAunsplash2.jpg")
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ç–æ –≤ –ª–∏—á–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await bot.send_location(chat_id=message.from_user.id, latitude=55, longitude=65)
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–∫–∞—Ü–∏—é —Å —ç—Ç–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤ –ª–∏—á–∫—É



if __name__ == '__main__':
    executor.start_polling(dp, on_startup=on_startup_, skip_updates=True)  # skip_updates=True –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å
    # –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–∏–∑–æ—à–ª–∏ –≤ –æ—Ñ–ª–∞–π–Ω–µ,
    # –±–æ—Ç –Ω–µ –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ç–µ –∫–æ–º–∞–Ω–¥—ã –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –ø–æ–∫–∞ –±–æ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–ª
